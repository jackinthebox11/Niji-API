<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	
	<persistence-unit name="example" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<properties>

			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
			<property name="hibernate.hbm2ddl.auto" value="update" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
			<property name="hibernate.connection.username" value="devtest" />
			<property name="hibernate.connection.password" value="" />

			<!-- <property datanucleus.connectionPoolingType=JNDI /> <property datanucleus.ConnectionDriverName=com.sun.jndi.ldap.LdapCtxFactory 
				/> <property datanucleus.ConnectionURL=ldap://localhost:10389 /> <property 
				datanucleus.ConnectionUserName=uid=admin,ou=system /> <property datanucleus.ConnectionPassword=secret 
				/> -->
			<!-- <property name="javax.persistence.jdbc.password" value=""/> -->
			<property name="hibernate.connection.url" value="jdbc:mysql://localhost:8889/dad_databaseAPI" />



			<!-- cache configuration -->
			<!-- <property name="hibernate.ejb.classcache.org.hibernate.ejb.test.Item" 
				value="read-write"/> -->
			<!-- <property name="hibernate.ejb.collectioncache.org.hibernate.ejb.test.Item.distributors" 
				value="read-write, RegionName"/> -->

			<!-- alternatively to <class> and <property> declarations, you can use 
				a regular hibernate.cfg.xml file -->
			<!-- property name="hibernate.ejb.cfgfile" value="/org/hibernate/ejb/test/hibernate.cfg.xml"/ -->
		</properties>
	</persistence-unit>
</persistence>